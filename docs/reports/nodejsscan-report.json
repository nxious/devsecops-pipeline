{
  "errors": [
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile-dev as ts",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 18,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/Dockerfile-dev",
          "source_hash": "c10967c90e63b1bc8ae7c9ac69cf4bfa898ba967103868570477430d7c26076a",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile as ts",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 69,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/Dockerfile",
          "source_hash": "2e6ef43382521e93092babdff17fb887e82392aa678736d3ad061a9a85e9137f",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 8,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/LICENSE",
          "source_hash": "3918b81077d08aa4e30a81f813bbd101391fcc22395ff64c3812cf0afdc40084",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 69,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/Dockerfile",
          "source_hash": "2e6ef43382521e93092babdff17fb887e82392aa678736d3ad061a9a85e9137f",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Jenkinsfile as ts",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 9,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/Jenkinsfile",
          "source_hash": "ebc0d1d73bdb4446fc186d12d96e4bea08bfb2618adf2788ff9c7ef459ad4f45",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Jenkinsfile as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 9,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/Jenkinsfile",
          "source_hash": "ebc0d1d73bdb4446fc186d12d96e4bea08bfb2618adf2788ff9c7ef459ad4f45",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as ts",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 8,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/LICENSE",
          "source_hash": "3918b81077d08aa4e30a81f813bbd101391fcc22395ff64c3812cf0afdc40084",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile-dev as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 18,
            "line": 1
          },
          "file": "/var/lib/jenkins/workspace/DVNA/Dockerfile-dev",
          "source_hash": "c10967c90e63b1bc8ae7c9ac69cf4bfa898ba967103868570477430d7c26076a",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "nodejs": {
    "cookie_session_default": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/server.js",
          "match_lines": [
            23,
            28
          ],
          "match_position": [
            9,
            3
          ],
          "match_string": "app.use(session({\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: false }\n}))"
        }
      ],
      "metadata": {
        "cwe": "CWE-522: Insufficiently Protected Credentials",
        "description": "Consider changing the default session cookie name. An attacker can use it to fingerprint the server and target attacks accordingly.",
        "owasp": "A2: Broken Authentication",
        "severity": "INFO"
      }
    },
    "cookie_session_no_domain": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/server.js",
          "match_lines": [
            23,
            28
          ],
          "match_position": [
            9,
            3
          ],
          "match_string": "app.use(session({\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: false }\n}))"
        }
      ],
      "metadata": {
        "cwe": "CWE-522: Insufficiently Protected Credentials",
        "description": "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next.",
        "owasp": "A2: Broken Authentication",
        "severity": "INFO"
      }
    },
    "cookie_session_no_expires": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/server.js",
          "match_lines": [
            23,
            28
          ],
          "match_position": [
            9,
            3
          ],
          "match_string": "app.use(session({\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: false }\n}))"
        }
      ],
      "metadata": {
        "cwe": "CWE-613: Insufficient Session Expiration",
        "description": "Default session middleware settings: `expires` not set. Use it to set expiration date for persistent cookies.",
        "owasp": "A2: Broken Authentication",
        "severity": "INFO"
      }
    },
    "cookie_session_no_path": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/server.js",
          "match_lines": [
            23,
            28
          ],
          "match_position": [
            9,
            3
          ],
          "match_string": "app.use(session({\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: false }\n}))"
        }
      ],
      "metadata": {
        "cwe": "CWE-522: Insufficiently Protected Credentials",
        "description": "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request.",
        "owasp": "A2: Broken Authentication",
        "severity": "INFO"
      }
    },
    "cookie_session_no_samesite": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/server.js",
          "match_lines": [
            23,
            28
          ],
          "match_position": [
            9,
            3
          ],
          "match_string": "app.use(session({\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: false }\n}))"
        }
      ],
      "metadata": {
        "cwe": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
        "description": "Default session middleware settings: `sameSite` attribute is not configured to strict or lax. These configurations provides protection against Cross Site Request Forgery attacks.",
        "owasp": "A2: Broken Authentication",
        "severity": "WARNING"
      }
    },
    "cookie_session_no_secure": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/server.js",
          "match_lines": [
            23,
            28
          ],
          "match_position": [
            9,
            3
          ],
          "match_string": "app.use(session({\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: false }\n}))"
        }
      ],
      "metadata": {
        "cwe": "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
        "description": "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS.",
        "owasp": "A2: Broken Authentication",
        "severity": "WARNING"
      }
    },
    "express_open_redirect": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/core/appHandler.js",
          "match_lines": [
            188,
            188
          ],
          "match_position": [
            3,
            30
          ],
          "match_string": "\t\tres.redirect(req.query.url)"
        }
      ],
      "metadata": {
        "cwe": "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
        "description": "Untrusted user input in redirect() can result in Open Redirect vulnerability.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "node_api_key": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/Jenkinsfile",
          "match_lines": [
            26,
            26
          ],
          "match_position": [
            34,
            97
          ],
          "match_string": "                withCredentials([string(credentialsId: 'OSSI_API_KEY', variable: 'OSSI_API_KEY'), string(credentialsId: 'OSSI_USERNAME', variable: 'OSSI_USERNAME')]) {"
        },
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/Jenkinsfile",
          "match_lines": [
            53,
            53
          ],
          "match_position": [
            34,
            97
          ],
          "match_string": "                withCredentials([string(credentialsId: 'SNYK_API_KEY', variable: 'SNYK_API_KEY')]) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-798: Use of Hard-coded Credentials",
        "description": "A hardcoded API Key is identified. Store it properly in an environment variable.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "ERROR"
      }
    },
    "node_deserialize": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/core/appHandler.js",
          "match_lines": [
            218,
            218
          ],
          "match_position": [
            18,
            81
          ],
          "match_string": "\t\tvar products = serialize.unserialize(req.files.products.data.toString('utf8'))"
        }
      ],
      "metadata": {
        "cwe": "CWE-502: Deserialization of Untrusted Data",
        "description": "User controlled data in 'unserialize()' or 'deserialize()' function can result in Object Injection or Remote Code Injection.",
        "owasp": "A8: Insecure Deserialization",
        "severity": "ERROR"
      }
    },
    "node_sqli_injection": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/core/appHandler.js",
          "match_lines": [
            10,
            35
          ],
          "match_position": [
            2,
            4
          ],
          "match_string": "\tvar query = \"SELECT name,id FROM Users WHERE login='\" + req.body.login + \"'\";\n\tdb.sequelize.query(query, {\n\t\tmodel: db.User\n\t}).then(user => {\n\t\tif (user.length) {\n\t\t\tvar output = {\n\t\t\t\tuser: {\n\t\t\t\t\tname: user[0].name,\n\t\t\t\t\tid: user[0].id\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.render('app/usersearch', {\n\t\t\t\toutput: output\n\t\t\t})\n\t\t} else {\n\t\t\treq.flash('warning', 'User not found')\n\t\t\tres.render('app/usersearch', {\n\t\t\t\toutput: null\n\t\t\t})\n\t\t}\n\t}).catch(err => {\n\t\treq.flash('danger', 'Internal Error')\n\t\tres.render('app/usersearch', {\n\t\t\toutput: null\n\t\t})\n\t})"
        }
      ],
      "metadata": {
        "cwe": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "description": "Untrusted input concatinated with raw SQL query can result in SQL Injection.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    }
  },
  "templates": {
    "ejs_ect_template": {
      "files": [
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/views/app/products.ejs",
          "match_lines": [
            50,
            50
          ],
          "match_position": [
            1851,
            1881
          ],
          "match_string": "<%- output.products[i].name %>"
        },
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/views/app/products.ejs",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            721,
            745
          ],
          "match_string": "<%- output.searchTerm %>"
        },
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/views/app/products.ejs",
          "match_lines": [
            51,
            51
          ],
          "match_position": [
            1907,
            1937
          ],
          "match_string": "<%- output.products[i].code %>"
        },
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/views/app/products.ejs",
          "match_lines": [
            52,
            52
          ],
          "match_position": [
            1963,
            1993
          ],
          "match_string": "<%- output.products[i].tags %>"
        },
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/views/app/products.ejs",
          "match_lines": [
            53,
            53
          ],
          "match_position": [
            2019,
            2056
          ],
          "match_string": "<%- output.products[i].description %>"
        },
        {
          "file_path": "/var/lib/jenkins/workspace/DVNA/views/app/products.ejs",
          "match_lines": [
            49,
            49
          ],
          "match_position": [
            1797,
            1825
          ],
          "match_string": "<%- output.products[i].id %>"
        }
      ],
      "metadata": {
        "cwe": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "The EJS/ECT template has an unescaped variable. Untrusted user input passed to this variable results in Cross Site Scripting (XSS).",
        "id": "ejs_ect_template",
        "input_case": "exact",
        "owasp": "A1: Injection",
        "pattern": "<%-(?![ ]*include\\().*%>",
        "severity": "ERROR",
        "type": "Regex"
      }
    }
  }
}